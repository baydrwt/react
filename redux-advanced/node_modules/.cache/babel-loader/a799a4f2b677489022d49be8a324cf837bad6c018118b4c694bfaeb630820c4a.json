{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [{\n      itemId: 1,\n      name: \" newItem.name\",\n      price: \"newItem.price\",\n      quantity: 0,\n      totalPrice: \"newItem.price\"\n    }],\n    totalQuantitiy: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      console.log(newItem);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (newItem !== existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          price: newItem.price,\n          quantity: 0,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.flter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    }\n    // increment(state, action) {\n    //   const newItem = action.payload;\n    //   const existingItem = state.items.find((item) => item.id === newItem.id);\n\n    //   if (newItem === existingItem) {\n    //     existingItem.quantity++;\n    //   }\n    // },\n    // decrement(state, action) {\n    //   const newItem = action.payload;\n    //   const existingItem = state.items.find((item) => item.id === newItem.id);\n\n    //   if (newItem === existingItem) {\n    //     existingItem.quantity--;\n    //   }\n    // },\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","itemId","price","quantity","totalPrice","totalQuantitiy","reducers","addItemToCart","state","action","newItem","payload","console","log","existingItem","find","item","id","push","removeItemFromCart","flter","cartActions","actions","reducer"],"sources":["D:/Project/Web/Github/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [{ itemId: 1, name: \" newItem.name\", price: \"newItem.price\", quantity: 0, totalPrice: \"newItem.price\" }],\r\n    totalQuantitiy: 0,\r\n  },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      console.log(newItem);\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      if (newItem !== existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          name: newItem.name,\r\n          price: newItem.price,\r\n          quantity: 0,\r\n          totalPrice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice += newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.flter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice -= existingItem.price;\r\n      }\r\n    },\r\n    // increment(state, action) {\r\n    //   const newItem = action.payload;\r\n    //   const existingItem = state.items.find((item) => item.id === newItem.id);\r\n\r\n    //   if (newItem === existingItem) {\r\n    //     existingItem.quantity++;\r\n    //   }\r\n    // },\r\n    // decrement(state, action) {\r\n    //   const newItem = action.payload;\r\n    //   const existingItem = state.items.find((item) => item.id === newItem.id);\r\n\r\n    //   if (newItem === existingItem) {\r\n    //     existingItem.quantity--;\r\n    //   }\r\n    // },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;MAAEH,IAAI,EAAE,eAAe;MAAEI,KAAK,EAAE,eAAe;MAAEC,QAAQ,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAgB,CAAC,CAAC;IAC/GC,cAAc,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;MACpB,MAAMI,YAAY,GAAGN,KAAK,CAACR,KAAK,CAACe,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,OAAO,CAACO,EAAE,CAAC;MACvE,IAAIP,OAAO,KAAKI,YAAY,EAAE;QAC5BN,KAAK,CAACR,KAAK,CAACkB,IAAI,CAAC;UACfD,EAAE,EAAEP,OAAO,CAACO,EAAE;UACdnB,IAAI,EAAEY,OAAO,CAACZ,IAAI;UAClBI,KAAK,EAAEQ,OAAO,CAACR,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEM,OAAO,CAACR;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLY,YAAY,CAACX,QAAQ,EAAE;QACvBW,YAAY,CAACV,UAAU,IAAIM,OAAO,CAACR,KAAK;MAC1C;IACF,CAAC;IACDiB,kBAAkBA,CAACX,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAMQ,EAAE,GAAGR,MAAM,CAACE,OAAO;MACzB,MAAMG,YAAY,GAAGN,KAAK,CAACR,KAAK,CAACe,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAE/D,IAAIH,YAAY,CAACX,QAAQ,KAAK,CAAC,EAAE;QAC/BK,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACoB,KAAK,CAAEJ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC3D,CAAC,MAAM;QACLH,YAAY,CAACX,QAAQ,EAAE;QACvBW,YAAY,CAACV,UAAU,IAAIU,YAAY,CAACZ,KAAK;MAC/C;IACF;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMmB,WAAW,GAAGxB,SAAS,CAACyB,OAAO;AAE5C,eAAezB,SAAS,CAAC0B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}