{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantitiy++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          name: newItem.name,\n          price: newItem.price,\n          quantity: 0,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice += newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantitiy--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.flter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      }\n    }\n    // increment(state, action) {\n    //   const newItem = action.payload;\n    //   const existingItem = state.items.find((item) => item.id === newItem.id);\n\n    //   if (newItem === existingItem) {\n    //     existingItem.quantity++;\n    //   }\n    // },\n    // decrement(state, action) {\n    //   const newItem = action.payload;\n    //   const existingItem = state.items.find((item) => item.id === newItem.id);\n\n    //   if (newItem === existingItem) {\n    //     existingItem.quantity--;\n    //   }\n    // },\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","totalQuantitiy","push","price","quantity","totalPrice","removeItemFromCart","flter","cartActions","actions","reducer"],"sources":["D:/Project/Web/Github/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      const newItem = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      state.totalQuantitiy++;\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          name: newItem.name,\r\n          price: newItem.price,\r\n          quantity: 0,\r\n          totalPrice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice += newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      state.totalQuantitiy--;\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.flter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice -= existingItem.price;\r\n      }\r\n    },\r\n    // increment(state, action) {\r\n    //   const newItem = action.payload;\r\n    //   const existingItem = state.items.find((item) => item.id === newItem.id);\r\n\r\n    //   if (newItem === existingItem) {\r\n    //     existingItem.quantity++;\r\n    //   }\r\n    // },\r\n    // decrement(state, action) {\r\n    //   const newItem = action.payload;\r\n    //   const existingItem = state.items.find((item) => item.id === newItem.id);\r\n\r\n    //   if (newItem === existingItem) {\r\n    //     existingItem.quantity--;\r\n    //   }\r\n    // },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvEP,KAAK,CAACQ,cAAc,EAAE;MACtB,IAAI,CAACJ,YAAY,EAAE;QACjBJ,KAAK,CAACJ,KAAK,CAACa,IAAI,CAAC;UACfF,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdb,IAAI,EAAEQ,OAAO,CAACR,IAAI;UAClBgB,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAEV,OAAO,CAACQ;QACtB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLN,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,IAAIV,OAAO,CAACQ,KAAK;MAC1C;IACF,CAAC;IACDG,kBAAkBA,CAACb,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/DP,KAAK,CAACQ,cAAc,EAAE;MACtB,IAAIJ,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC/BX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACkB,KAAK,CAAER,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC3D,CAAC,MAAM;QACLH,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,IAAIR,YAAY,CAACM,KAAK;MAC/C;IACF;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMK,WAAW,GAAGtB,SAAS,CAACuB,OAAO;AAE5C,eAAevB,SAAS,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}