{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Web\\\\Github\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\nimport { createBrowserRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./page/HomePage.jsx\";\nimport EventPage from \"./page/EventPage.jsx\";\nimport EventDetailPage from \"./page/EventDetailPage.jsx\";\nimport NewEventPage from \"./page/NewEventPage.jsx\";\nimport EditEventPage from \"./page/EditEventPage.jsx\";\nimport MainNavigation from \"./components/MainNavigation.js\";\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst routeDefinitions = createRoutesFromElements(/*#__PURE__*/_jsxDEV(Router, {\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 29\n  }, this),\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"events/:id\",\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 39\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"events/new\",\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 39\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"events/:id/edit\",\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 44\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this));\nconst router = createBrowserRouter(routeDefinitions);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","createRoutesFromElements","Route","RouterProvider","HomePage","EventPage","EventDetailPage","NewEventPage","EditEventPage","MainNavigation","jsxDEV","_jsxDEV","routeDefinitions","Router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","router","App","_c","$RefreshReg$"],"sources":["D:/Project/Web/Github/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["import { createBrowserRouter, createRoutesFromElements, Route, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"./page/HomePage.jsx\";\nimport EventPage from \"./page/EventPage.jsx\";\nimport EventDetailPage from \"./page/EventDetailPage.jsx\";\nimport NewEventPage from \"./page/NewEventPage.jsx\";\nimport EditEventPage from \"./page/EditEventPage.jsx\";\nimport MainNavigation from \"./components/MainNavigation.js\";\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst routeDefinitions = createRoutesFromElements(\n  <Router path=\"/\" element={<MainNavigation />}>\n    <Route index element={<HomePage />} />\n    <Route path=\"events\" element={<EventPage />} />\n    <Route path=\"events/:id\" element={<EventDetailPage />} />\n    <Route path=\"events/new\" element={<NewEventPage />} />\n    <Route path=\"events/:id/edit\" element={<EditEventPage />} />\n  </Router>\n);\n\nconst router = createBrowserRouter(routeDefinitions);\n\nfunction App() {\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,mBAAmB,EAAEC,wBAAwB,EAAEC,KAAK,EAAEC,cAAc,QAAQ,kBAAkB;AACvG,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,gBAAgB,GAAGX,wBAAwB,cAC/CU,OAAA,CAACE,MAAM;EAACC,IAAI,EAAC,GAAG;EAACC,OAAO,eAAEJ,OAAA,CAACF,cAAc;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAE;EAAAC,QAAA,gBAC3CT,OAAA,CAACT,KAAK;IAACmB,KAAK;IAACN,OAAO,eAAEJ,OAAA,CAACP,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACtCR,OAAA,CAACT,KAAK;IAACY,IAAI,EAAC,QAAQ;IAACC,OAAO,eAAEJ,OAAA,CAACN,SAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAC/CR,OAAA,CAACT,KAAK;IAACY,IAAI,EAAC,YAAY;IAACC,OAAO,eAAEJ,OAAA,CAACL,eAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACzDR,OAAA,CAACT,KAAK;IAACY,IAAI,EAAC,YAAY;IAACC,OAAO,eAAEJ,OAAA,CAACJ,YAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACtDR,OAAA,CAACT,KAAK;IAACY,IAAI,EAAC,iBAAiB;IAACC,OAAO,eAAEJ,OAAA,CAACH,aAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACtD,CACV,CAAC;AAED,MAAMG,MAAM,GAAGtB,mBAAmB,CAACY,gBAAgB,CAAC;AAEpD,SAASW,GAAGA,CAAA,EAAG;EACb,oBAAOZ,OAAA,CAACR,cAAc;IAACmB,MAAM,EAAEA;EAAO;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;AAC1D;AAACK,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}