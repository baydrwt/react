{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Web\\\\Github\\\\manage-event\\\\frontend\\\\src\\\\page\\\\EventPage.jsx\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { defer, json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"could not fetched the data\" }), { status: 500 });\n    throw json({\n      message: \"could not fetched the data\"\n    }, {\n      status: 500\n    });\n  }\n  const resData = response.json();\n  return resData.events;\n}\nexport async function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Suspense","defer","json","useLoaderData","EventsList","jsxDEV","_jsxDEV","loadEvents","response","fetch","ok","message","status","resData","events","loader","EventsPage","_s","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Project/Web/Github/manage-event/frontend/src/page/EventPage.jsx"],"sourcesContent":["import { Suspense } from \"react\";\r\nimport { defer, json, useLoaderData } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // throw new Response(JSON.stringify({ message: \"could not fetched the data\" }), { status: 500 });\r\n    throw json({ message: \"could not fetched the data\" }, { status: 500 });\r\n  }\r\n\r\n  const resData = response.json();\r\n\r\n  return resData.events;\r\n}\r\n\r\nexport async function loader() {\r\n  return defer({\r\n    events: loadEvents(),\r\n  });\r\n}\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n\r\n  return <Suspense>\r\n    \r\n  </Suspense>;\r\n}\r\n\r\nexport default EventsPage;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAC7D,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAeC,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,MAAMR,IAAI,CAAC;MAAES,OAAO,EAAE;IAA6B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACxE;EAEA,MAAMC,OAAO,GAAGL,QAAQ,CAACN,IAAI,CAAC,CAAC;EAE/B,OAAOW,OAAO,CAACC,MAAM;AACvB;AAEA,OAAO,eAAeC,MAAMA,CAAA,EAAG;EAC7B,OAAOd,KAAK,CAAC;IACXa,MAAM,EAAEP,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAEA,SAASS,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGf,aAAa,CAAC,CAAC;EAE5B,oBAAOG,OAAA,CAACN,QAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AACb;AAACL,EAAA,CANQD,UAAU;EAAA,QACJb,aAAa;AAAA;AAAAoB,EAAA,GADnBP,UAAU;AAQnB,eAAeA,UAAU;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}