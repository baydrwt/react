{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Web\\\\Github\\\\manage-event\\\\frontend\\\\src\\\\page\\\\Authentication.jsx\";\nimport { json } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw json({\n      message: \"Invalid Mode\"\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    header: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 401 || response.status === 422) {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","header","body","JSON","stringify","$RefreshReg$"],"sources":["D:/Project/Web/Github/manage-event/frontend/src/page/Authentication.jsx"],"sourcesContent":["import { json } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\n\nexport default function AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport async function action({ request }) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw json({ message: \"Invalid Mode\" }, { status: 422 });\n  }\n\n  const data = await request.formData();\n\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\"),\n  };\n\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    header: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(authData),\n  });\n\n  if(response.status === 401 || response.status === 422){\n    return response\n  }\n}\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAC3C,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFuBL,kBAAkB;AAI1C,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzC,MAAMf,IAAI,CAAC;MAAEiB,OAAO,EAAE;IAAe,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC1D;EAEA,MAAMC,IAAI,GAAG,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;EAErC,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBO,QAAQ,EAAEJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAE;IAC5DW,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;MACN,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAGG,QAAQ,CAACN,MAAM,KAAK,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAC;IACpD,OAAOM,QAAQ;EACjB;AACF;AAAC,IAAAf,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}