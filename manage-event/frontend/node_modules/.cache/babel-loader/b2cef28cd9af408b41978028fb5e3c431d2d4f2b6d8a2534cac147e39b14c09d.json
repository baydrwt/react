{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Web\\\\Github\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\nimport { createBrowserRoute, createRoutesFromElements, Router } from \"react-router-dom\";\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst routeDefinitions = createRoutesFromElements(/*#__PURE__*/_jsxDEV(Router, {\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 29\n  }, this),\n  children: [/*#__PURE__*/_jsxDEV(Router, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 36\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Router, {\n    path: \"events/:id\",\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 40\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Router, {\n    path: \"events/new\",\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 40\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Router, {\n    path: \"events/:id/edit\",\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this));\nconst route = createBrowserRoute(routeDefinitions);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRoute","createRoutesFromElements","Router","jsxDEV","_jsxDEV","Fragment","_Fragment","routeDefinitions","path","element","HomePage","fileName","_jsxFileName","lineNumber","columnNumber","children","EventPage","EventDetailPage","NewEventPage","EditEventPage","route","App","_c","$RefreshReg$"],"sources":["D:/Project/Web/Github/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["import { createBrowserRoute, createRoutesFromElements, Router } from \"react-router-dom\";\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst routeDefinitions = createRoutesFromElements(\n  <Router path=\"/\" element={<HomePage />}>\n    <Router path=\"events\" element={<EventPage />} />\n    <Router path=\"events/:id\" element={<EventDetailPage />} />\n    <Router path=\"events/new\" element={<NewEventPage />} />\n    <Router path=\"events/:id/edit\" element={<EditEventPage />} />\n  </Router>\n);\n\nconst route = createBrowserRoute(routeDefinitions);\n\nfunction App() {\n  return <></>;\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,kBAAkB,EAAEC,wBAAwB,EAAEC,MAAM,QAAQ,kBAAkB;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,gBAAgB,GAAGN,wBAAwB,cAC/CG,OAAA,CAACF,MAAM;EAACM,IAAI,EAAC,GAAG;EAACC,OAAO,eAAEL,OAAA,CAACM,QAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAE;EAAAC,QAAA,gBACrCX,OAAA,CAACF,MAAM;IAACM,IAAI,EAAC,QAAQ;IAACC,OAAO,eAAEL,OAAA,CAACY,SAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAChDV,OAAA,CAACF,MAAM;IAACM,IAAI,EAAC,YAAY;IAACC,OAAO,eAAEL,OAAA,CAACa,eAAe;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAC1DV,OAAA,CAACF,MAAM;IAACM,IAAI,EAAC,YAAY;IAACC,OAAO,eAAEL,OAAA,CAACc,YAAY;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACvDV,OAAA,CAACF,MAAM;IAACM,IAAI,EAAC,iBAAiB;IAACC,OAAO,eAAEL,OAAA,CAACe,aAAa;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACvD,CACV,CAAC;AAED,MAAMM,KAAK,GAAGpB,kBAAkB,CAACO,gBAAgB,CAAC;AAElD,SAASc,GAAGA,CAAA,EAAG;EACb,oBAAOjB,OAAA,CAAAE,SAAA,mBAAI,CAAC;AACd;AAACgB,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}